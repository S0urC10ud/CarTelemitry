// <auto-generated />
using System;
using CarTelemetry.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarTelemetry.Migrations
{
    [DbContext(typeof(CarTelemetryContext))]
    [Migration("20201009190529_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarTelemetry.Model.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Typ")
                        .HasColumnType("int");

                    b.HasKey("CarId");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("CarTelemetry.Model.TelemetryData", b =>
                {
                    b.Property<int>("IdTelemetryData")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Capacity")
                        .HasColumnType("decimal(18, 10)");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18, 10)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18, 10)");

                    b.Property<decimal>("Speed")
                        .HasColumnType("decimal(18, 3)");

                    b.HasKey("IdTelemetryData");

                    b.HasIndex("CarId");

                    b.ToTable("TelemetryData");
                });

            modelBuilder.Entity("CarTelemetry.Model.TelemetryData", b =>
                {
                    b.HasOne("CarTelemetry.Model.Car", null)
                        .WithMany("TelemetryData")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
